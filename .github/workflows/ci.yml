name: build
on: [push]

jobs:
  build:

    name: ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install GTest
        run: sudo apt-get install libgtest-dev -y 

      - name: Install lcov
        run: sudo apt install lcov
        
      - name: Install Clang-tidy
        run: sudo apt-get install -y clang-tidy

      - name: Install Scan-build  
        run: sudo apt-get install -y clang-tools

      - name: install fbinfer
        run: VERSION=1.1.0; curl -sSL "https://github.com/facebook/infer/releases/download/v$VERSION/infer-linux64-v$VERSION.tar.xz" | sudo tar -C /opt -xJ && sudo ln -s "/opt/infer-linux64-v$VERSION/bin/infer" /usr/local/bin/infer
        
      - name: scan-build  clang-tidy
        run: mkdir build && cd build && scan-build cmake .. && scan-build make 

      - name: cppcheck-action
        uses: deep5050/cppcheck-action@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
        
      - name: Install Cpplint
        run: sudo apt-get install python3-pip && pip install --user cpplint

      - name: Cpplint
        run: cpplint --extensions=c,h --filter=-runtime/references,-legal/copyright,-build/include_subdir,-whitespace/line_length,-readability/casting project/* && cpplint --extensions=cpp --filter=-runtime/references,-legal/copyright,-build/include_subdir,-whitespace/line_length,-readability/casting tests/*        

      - name: Tests
        run: mkdir runtests && cd runtests && cmake .. && make  && ./tests && cmake -Dparallel=ON .. && make && ./tests && ./consistent_test && ./parallel_test && ./comparison  &&  lcov -t "c_hw1" -o hw_2.info -c -d . && lcov --remove hw_2.info "/usr/include/*" "./include/*" "/usr/local/*" > coverage.info && genhtml -o report coverage.info

      - name: Valgrind install
        run: sudo apt-get update && sudo apt-get install -y valgrind && mkdir valgrind_tests  

      - name: Valgrind 
        run: cd valgrind_tests && cmake .. && make && valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q ./tests &&  cmake -Dparallel=ON .. && make &&  valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q ./tests && valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q ./parallel_test && valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q ./consistent_test && valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q ./comparison 

      - name: Sanitizers address
        run: cd build && cmake -Daddress=ON -Dparallel=OFF .. && make  && cmake -Daddress=ON -Dparallel=ON .. && make  

      - name: Sanitizers memory
        run: cd build && cmake -Dmemory=ON -Dparallel=OFF .. && make  && cmake -Dmemory=ON -Dparallel=ON .. && make
        
      - name: Sanitizers undefined
        run: cd build && cmake -Dundefined=ON -Dparallel=OFF .. && make  && cmake -Dundefined=ON -Dparallel=ON .. && make

      - name: Sanitizers thread
        run: cd build && cmake -Dthread=ON -Dparallel=OFF .. && make && cmake -Dthread=ON -Dparallel=ON .. && make 

      - name: run with fbinfer
        run: mkdir infer_build && cd infer_build && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && cd .. && infer run --compilation-database infer_build/compile_commands.json

      - name: coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: runtests/report




      

      
